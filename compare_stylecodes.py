import pandas as pd
import numpy as np
from numpy.linalg import norm
import numpy as np
import argparse
from itertools import combinations

parser = argparse.ArgumentParser()
parser.add_argument('--csv1', type=str, default=None, help='first .csv file of style codes generated by style_code.py (mode: compare codes from csv1 to csv2)')
parser.add_argument('--csv2', type=str, default=None, help='second .csv file of style codes generated by style_code.py (mode: compare codes from csv1 to csv2)')
parser.add_argument('--iter', type=str, default=None, help='model iteration to specify (mode: compare codes on two csvs (if using --csv1 and --csv2) or compare all codes for a given model iter (no --csv{1,2})')
args = parser.parse_args()

trans_func_names = ["func_neg", "func_log", "func_gamma", "func_piecewise_linear", "func_sobelx", "func_sobely", "func_identity"]

def sim(a,b):
    return np.dot(a, b)/(norm(a) * norm(b))

def main():
    if args.csv1 and args.csv2: # mode: compare two styles
        df1 = pd.read_csv(args.csv1)
        df2 = pd.read_csv(args.csv2)
        colnames = ['position{}'.format(i) for i in range(1, 9)]

        df1 = df1[colnames]
        df2 = df2[colnames]
        
        df1 = df1.to_numpy()
        df2 = df2.to_numpy()
        
        similarities = [sim(df1[i], df2[i])  for i in range(df1.shape[0])] 

        #print(similarities)
        
        mean = np.mean(similarities)
        std = np.std(similarities)
        print('average cosine similarity between the two styles = {}, stdev = {}'.format(mean, std))



        compare_indices = list(combinations(range(df1.shape[0]), 2))

        self_sim1 = [sim(df1[i1], df1[i2]) for (i1, i2) in compare_indices]
        self_sim2 = [sim(df2[i1], df2[i2]) for (i1, i2) in compare_indices]

        mean1 = np.mean(self_sim1)
        std1 = np.std(self_sim1)
        mean2 = np.mean(self_sim2)
        std2 = np.std(self_sim2)

        print('average cosine similarity between all pairs of style codes of different images of the same style: style 1 = {} +/- {}, style 2 = {} +/- {}'.format(mean1, std1, mean2, std2))

    else: # mode: compare all styles
        print('comparing all styles...')

        similarity_matrix = np.zeros((len(trans_func_names), len(trans_func_names)))
        
        for i in range(len(trans_func_names)):
            for j in range(len(trans_func_names)):
                csv1 = 'style_codes_test_{}_{}.csv'.format(args.iter, trans_func_names[i])
                csv2 = 'style_codes_test_{}_{}.csv'.format(args.iter, trans_func_names[j])
                df1 = pd.read_csv(csv1)
                df2 = pd.read_csv(csv2)
                colnames = ['position{}'.format(i) for i in range(1, 9)]

                df1 = df1[colnames]
                df2 = df2[colnames]
                
                df1 = df1.to_numpy()
                df2 = df2.to_numpy()
                
                similarities = [sim(df1[i], df2[i])  for i in range(df1.shape[0])] 

                mean = np.mean(similarities)
                stdev = np.std(similarities)
                
                similarity_matrix[i][j] = mean

            

        print('average cosine similarity matrix for all styles:')
        print(similarity_matrix)
        np.savetxt('similarity_matrix_{}.csv'.format(args.iter), similarity_matrix, delimiter=',')



    return

if __name__ == '__main__':
    main()
